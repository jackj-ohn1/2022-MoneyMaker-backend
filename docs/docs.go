// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terrms/",
        "contact": {
            "name": "yyj",
            "email": "2105753640@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/money/goods/comment": {
            "post": {
                "description": "\"进行核对\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Givecomment"
                ],
                "summary": "\"用户登录\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "goodsid",
                        "name": "goodsid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successfully"
                    },
                    "500": {
                        "description": "error happened"
                    }
                }
            }
        },
        "/money/goods/comments": {
            "get": {
                "description": "\"分值已处理,评论无序\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "\"获取某个商品的所有评论\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "goodsid",
                        "name": "goodsid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"all\":所有分值情况, \"infor\":\"评论信息以及学号\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tables.Comment"
                            }
                        }
                    },
                    "500": {
                        "description": "err"
                    }
                }
            }
        },
        "/money/goods/feedback": {
            "post": {
                "description": "\"举报次数增加\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "\"接收举报\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "goodsid",
                        "name": "goodsid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload successfully"
                    },
                    "500": {
                        "description": "error happened"
                    }
                }
            }
        },
        "/money/search": {
            "post": {
                "description": "\"搜索\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "\"搜索\"",
                "parameters": [
                    {
                        "description": "content",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search successfully"
                    },
                    "204": {
                        "description": "search nothing"
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.Description": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "tables.Comment": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentID": {
                    "type": "integer"
                },
                "goodsID": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "localhost:8080",
	BasePath:    "/api/vi",
	Schemes:     []string{"http"},
	Title:       "miniproject",
	Description: "赚圈圈API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
